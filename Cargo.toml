[package]
name = "pq_lib"
version = "0.1.0"
edition = "2021"
authors = ["pq_lib Team"]
description = "Post-Quantum Cryptography library for blockchain applications"
license = "Apache-2.0 OR MIT"
keywords = ["cryptography", "post-quantum", "blockchain", "signatures", "pqc"]
categories = ["cryptography", "algorithms"]
repository = "https://github.com/magish2112/pq_lib"
documentation = "https://docs.rs/pq_lib"
readme = "README.md"

[lib]
name = "pq_lib"
path = "src/lib.rs"

[features]
default = ["std", "ed25519"]
std = []
no_std = []
ed25519 = ["dep:ed25519-dalek", "dep:rand"]
ml-dsa = []
slh-dsa = []
serde-support = ["dep:serde", "dep:serde_cbor"]

[dependencies]
# Core cryptographic primitives
rand = { version = "0.8", default-features = false, optional = true }
sha3 = { version = "0.10", default-features = false }

# Security utilities
zeroize = { version = "1.7", features = ["zeroize_derive"] }

# Async trait support
async-trait = "0.1"

# Serialization support (optional)
serde = { version = "1.0", default-features = false, features = ["derive"], optional = true }
serde_cbor = { version = "0.11", optional = true }

# Classic cryptography for hybrid approach
ed25519-dalek = { version = "2.1", default-features = false, features = ["rand_core"], optional = true }

# Post-quantum cryptography (NIST algorithms)
# Note: Using mock implementations for now - uncomment when ready to use real implementations
# ml-dsa = { version = "0.1.0-rc.0", optional = true }
# slh-dsa = { version = "0.2.0-rc.0", optional = true }

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
tokio = { version = "1.0", features = ["full"] }
tokio-test = "0.4"
proptest = "1.0"
hex = "0.4"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

